@model IEnumerable<WatchMaker.Models.Articulos>


@{
    ViewBag.Title = "Index";
}

<h2>Bodega de artículos</h2>

<div class="container mt-4">
    <div class="row">
        <!-- Primera Sección: Crear Artículo -->
        <div class="col-12 col-md-4 mb-4">
            <div class="p-3 border rounded shadow-sm">
                <h4>Acciones Rápidas</h4>
                <div>
                    @Html.ActionLink("Nuevo", "Create", "", new { @class = "btn btn-success w-100" })
                </div>
            </div>
        </div>

        <!-- Segunda Sección: Filtros -->
        <div class="col-12 col-md-4 mb-4">
            <div class="p-3 border rounded shadow-sm">
                <h4>Filtros de Búsqueda</h4>
                <div class="d-flex flex-column">
                    <!-- Campo de búsqueda por texto y búsqueda por imagen en el mismo input-group -->
                    <div class="mb-3">
                        <label for="buscador" class="form-label">Buscar Artículos:</label>
                        <div class="input-group">
                            <!-- Campo de búsqueda por texto -->
                            <input type="text" id="buscador" class="form-control" placeholder="Buscar por nombre..." onkeyup="filtrarTabla()">

                            <!-- Filtro por imagen como un botón dentro del input-group -->
                            <button class="btn btn-outline-secondary" type="button" onclick="document.getElementById('buscadorImagen').click();">
                                <i class="bi bi-image"></i> Buscar Imagen
                            </button>

                            <!-- Filtro por imagen invisible -->
                            <input type="file" id="buscadorImagen" class="form-control" accept="image/*" onchange="previsualizarImagen()" style="display: none;">
                        </div>
                        <br />
                        <div>
                            <button class="btn btn-secondary w-100" onclick="resetearFiltro()">Restablecer</button>
                        </div>
                        <!-- Previsualización de la imagen -->
                        <img id="previewBuscar" src="#" alt="Previsualización" style="max-width: 150px; display: none; margin-top: 10px;">
                    </div>

                    <!-- Botón Restablecer -->
                    
                </div>
            </div>
        </div>

        <!-- Tercera Sección: Imprimir y Descargar Datos -->
        <div class="col-12 col-md-4 mb-4">
            <div class="p-3 border rounded shadow-sm">
                <h4>Imprimir y Exportar Datos</h4>
                <div class="d-flex flex-column">
                    <!-- Sección de Imprimir y Exportar con dropdown -->
                    <div class="mb-3">
                        <label for="exportar" class="form-label">Selecciona una acción:</label>
                        <div class="btn-group w-100">
                            <button type="button" class="btn btn-primary dropdown-toggle w-100" data-bs-toggle="dropdown" aria-expanded="false">
                                Opciones
                            </button>
                            <ul class="dropdown-menu w-100">
                                <li><a class="dropdown-item" href="#" onclick="imprimirTabla()">Imprimir Tabla</a></li>
                                <li><a class="dropdown-item" href="#" onclick="descargarDatos('csv')">Descargar como CSV</a></li>
                                <li><a class="dropdown-item" href="#" onclick="descargarDatos('excel')">Descargar como Excel</a></li>
                                <li><a class="dropdown-item" href="#" onclick="descargarDatos('sql')">Descargar como SQL</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>











<br>
<div id="detalle-articulos">
    <table class="table" id="tablaArticulos">
        <tr>
            <th>Id</th>
            <th>Nombre</th>
            <th>Precio Venta</th>
            <th>Usuario</th>
            <th>Tipo de Artículo</th>
            <th>Categoría</th>
            <th>Imagen</th>
            <th>Material</th>
            <th>Talla</th>
            <th>Existencia</th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.IdArticulo)</td>
                <td>@Html.DisplayFor(modelItem => item.NombreArticulo)</td>
                <td>@Html.DisplayFor(modelItem => item.PrecioVenta)</td>
                <td> @(ViewBag.Usuarios != null && ViewBag.Usuarios.ContainsKey(item.IdUser) ? ViewBag.Usuarios[item.IdUser] : "Desconocido") </td>
                <td> @(ViewBag.Tiposart != null && ViewBag.Tiposart.ContainsKey(Convert.ToInt32(item.IdTipo)) ? ViewBag.Tiposart[Convert.ToInt32(item.IdTipo)] : "Desconocido") </td>
                <td> @(ViewBag.Catego != null && ViewBag.Catego.ContainsKey(Convert.ToInt32(item.IdCate)) ? ViewBag.Catego[Convert.ToInt32(item.IdCate)] : "Desconocido") </td>
                <td>
                    @if (item.Imagenes1 != null && item.Imagenes1.Any())
                    {
                        var imagen = item.Imagenes1.FirstOrDefault(); // Obtener la primera imagen
                        if (imagen != null && imagen.Imagen != null)
                        {
                            <img src="data:image/png;base64,@Convert.ToBase64String(imagen.Imagen)" width="150" height="150" />
                        }
                        else
                        {
                            <span>No especificado</span>
                        }
                    }
                    else
                    {
                        <span>No especificado</span>
                    }
                </td>
                <td> @(ViewBag.Materials != null && ViewBag.Materials.ContainsKey(Convert.ToInt32(item.IdMaterial)) ? ViewBag.Materials[Convert.ToInt32(item.IdMaterial)] : "Desconocido") </td>
                <td> @(ViewBag.Tallas != null && ViewBag.Tallas.ContainsKey(Convert.ToInt32(item.IdTalla)) ? ViewBag.Tallas[Convert.ToInt32(item.IdTalla)] : "Desconocido") </td>
                <td>@Html.DisplayFor(modelItem => item.Existencia)</td>
                <td>
                    <div class="action-buttons">
                        @Html.ActionLink("Editar", "Edit", new { id = item.IdArticulo }, new { @class = "btn btn-warning" }) 
                        @Html.ActionLink("Detalle", "Details", new { id = item.IdArticulo }, new { @class = "btn btn-primary" })
                        @Html.ActionLink("Eliminar", "Delete", new { id = item.IdArticulo }, new { @class = "btn btn-danger" })
                    </div>
                </td>

            </tr>
        }
    </table>
</div>
